---
title: "Is following artificial intelligence advice \"anchoring bias\"?"
author: "Jason Collins"
date: 2025-07-03 09:00:00+10:00
draft: true
bibliography: references.bib
---

If you want a reliable gimmick to demonstrate human "irrationality", ask half of your audience the following question:

> Was Elvis older or younger than age 45 when he died?

Ask the other half:

> Was Elvis older or younger than age 85 when he died?

Then ask both groups:

> How old was Elvis when he died?

Those asked if Elvis was older or younger than age 45 tend to estimate a lower age than those asked if he was older or younger than age 85.

This is an illustration of the "anchoring and adjustment" heuristic. When people are estimating a quantity, they often start from an initial value (the anchor) and adjust from that anchor to yield a final answer. The heuristic can lead to bias where we use weak anchors or insufficiently adjust from the anchor.

@tversky1974 illustrated weak anchors in an experiment where they spun a wheel with numbers on it before asking people whether the proportion of African countries who were members of the United Nations was above or below that number (this experiment was in the 1970s). They were then asked for a numerical estimate. Those who had a higher number on the wheel estimated a higher proportion. The randomness of the anchor was a nice experimental feature. In my Elvis example above, the respondent might assume I have chosen the number (45 or 85) for a reason. There might be information in that number. There is no such information in the spinning of the wheel.

Insufficient adjustment from the anchor can be thought of as the other side of the coin to using an irrelevant anchor. If there is any trace of an irrelevant anchor in your answer, you haven't adjusted enough. However, many anchors we use are sensible - we just don't adjust enough for our particular case.

Although anchoring is often called a "bias", it is better to think of it as a heuristic that can backfire depending on the task environment. If you're considering making an offer for a four-bedroom house, it's not a bad strategy to start with the sale price of the neighbouring 3-bedroom house then adjust for the extra bedroom and any other differences between the two. @griffiths2015 argued that anchoring and adjustment can be "resource-rational", where taking into account the computational cost makes anchoring and adjustment an optimal estimation strategy.

Which brings me to the question of anchoring to artificial intelligence (AI) advice.

A central challenge in human-AI interaction is calibrating the user's trust in the AI system. When should a user trust the AI? When should they deviate from the AI recommendation? The typical finding is that complementary performance - the human-AI combination outperforming the human or AI alone - is hard to achieve. The most common result is the AI boosting human performance, but not to the level of the AI alone. Deviations from the AI advice are more likely to degrade than improve performance.

@rastogi2022 proposed that one obstacle to complementary performance is "anchoring bias". People do not explore the alternative hypotheses once the AI decision has provided an anchor.

Before exploring whether this is "anchoring bias", let me describe the experiments.

## Experiment 1

A group of Amazon Mechanical Turk workers were asked to predict whether a student, given their characteristics, past performance and demographics, would pass or fail a class. In making their prediction, participants were provided with an AI model recommendation. The authors trained the AI - a logistic regression model - on a \[student performance dataset\](<https://archive.ics.uci.edu/dataset/320/student+performance>).

Before

This is where it gets interesting. The authors write:

> To induce anchoring bias, the participant was informed at the start of the training section that the AI model was 85% accurate (we carefully chose the training trials to ensure that the AI was indeed 85% accurate over these trials), while the modelâ€™s actual accuracy is 70.8% over the entire training set and 66.5% over the test set. Since our goal is to induce anchoring bias and the training time is short, we stated a high AI accuracy.

This is typical of many experiments I have read in the human-computer interaction literature. The authors are selective in the results they report and the absence of publicly available data means that the best you can do is speculate on the underlying phenomena.

The authors state that they achieve complementary performance, but I don't see it.

Measuring "adjustment" is also quite difficult here, as there is only one type of adjustment - disagreeing with the AI recommendation. Is this anchoring and adjustment - or is it assume the AI is right unless there is clear evidence to the contrary?

## Is this anchoring?

For it to be anchoring, we need some model of P(accuracy less than 85% \| experimenter told us accuracy 85% + D) that updates over time. They call it an anchor. I call it another prior. If I was in an economics experiment, my prior that the accuracy is actually 85% would be quite high.

If one of my kids tells me they've got a normal coin and flip two heads, I'm updating only marginally from my very strong prior. What is the level of trust of experimental participants in experimenters? (One reason deception is frowned upon in economics is because it degrades trust in experimenters, leading to an additional variable you need to account for in your analysis.)

## The problem is more often insufficient anchoring

By deliberately giving

Almost every experiment finds that people adjust too much! Here's some data from @dietvorst2018. People were more likely to use an algorithm if they could adjust it. That led to higher performance, largely because of this greater likelihood of selecting the model.

![@dietvorst2018 Figure 2b](img/dietvorst-et-al-2018-fig-2b.png){width="400"}

But how does the performance of those who selected the model compare to the model itself. Here is a chart I have generated from the experimental data provided in the [supplementary materials](https://pubsonline.informs.org/doi/suppl/10.1287/mnsc.2016.2643/suppl_file/mnsc.2016.2643-sm-data.zip). (And again noting that business schools are [far ahead of the human-computer interaction crowd](why-i-dont-trust-most-human-ai-interaction-experimental-research.qmd) when it comes to best practice data sharing.)

```{r dietvorst-error, message=FALSE, warning=FALSE}
library(tidyverse)
library(scales)

# Read the data - specify na values to handle periods as missing
data <- read_csv("data/Overcoming_Algorithm_Aversion_Data-study-1-data.csv",
                 na = c("", "NA", "."))

# Convert necessary columns to numeric (many are stored as strings due to periods)
data <- data %>%
  mutate(across(c(ModelBonus, ModelAAEEstimate, HumanAAEEstimate,
                  ModelConfidence, HumanConfidence, Age, Gender, Education,
                  AAE, ModelAAE, HumanAAE, Bonus, BonusFromModel, BonusFromHuman,
                  CorrelationWithModel, AvDiffFromModel, AvAdjustmentSize,
                  AdjustmentDividedByPotential, HumModelCorrelation, HumModelAvDiff,
                  AvgLargest10Changes, AnyBonus), 
                as.numeric))

# Define condition labels
condition_labels <- c("1" = "Can't change", 
                     "2" = "Adjust by 10", 
                     "3" = "Change 10", 
                     "4" = "Use freely")

# Filter for participants who chose the model (ModelBonus == 1)
model_choosers <- data %>%
  filter(ModelBonus == 1)

# Calculate summary statistics by condition
summary_stats <- model_choosers %>%
  group_by(Condition) %>%
  summarise(
    n = n(),
    ModelAAE_mean = mean(ModelAAE, na.rm = TRUE),
    AAE_mean = mean(AAE, na.rm = TRUE),
    ModelAAE_sd = sd(ModelAAE, na.rm = TRUE),
    AAE_sd = sd(AAE, na.rm = TRUE),
    Difference = AAE_mean - ModelAAE_mean,
    PercentChange = (Difference / ModelAAE_mean) * 100,
    AvgAdjustmentSize = mean(AvAdjustmentSize, na.rm = TRUE)
  ) %>%
  mutate(ConditionLabel = condition_labels[as.character(Condition)])

# Add info about total participants per condition
total_by_condition <- data %>%
  group_by(Condition) %>%
  summarise(total_n = n())

summary_stats <- summary_stats %>%
  left_join(total_by_condition, by = "Condition") %>%
  mutate(PropChoseModel = n / total_n)

# Prepare data for plotting
plot_data <- summary_stats %>%
  filter(!is.na(AAE_mean) & Condition != 1) %>%  # Remove can't change condition and any conditions with no data
  select(Condition, ConditionLabel, ModelAAE_mean, AAE_mean) %>%
  pivot_longer(cols = c(ModelAAE_mean, AAE_mean),
               names_to = "ErrorType",
               values_to = "AAE") %>%
  mutate(
    ErrorType = case_when(
      ErrorType == "ModelAAE_mean" ~ "Model (no adjustment)",
      ErrorType == "AAE_mean" ~ "Actual (with adjustment)"
    ),
    ErrorType = factor(ErrorType, levels = c("Model (no adjustment)", "Actual (with adjustment)"))
  )

# Create the plot
p <- ggplot(plot_data, aes(x = ConditionLabel, y = AAE, fill = ErrorType)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +
  scale_fill_manual(values = c("Model (no adjustment)" = "#3498db", 
                              "Actual (with adjustment)" = "#e74c3c")) +
  labs(
    title = "Error Rates for Model Choosers by Adjustment Condition",
    subtitle = "Comparing model performance with and without adjustments",
    x = "Condition",
    y = "Average Absolute Error (AAE)",
    fill = "Error Type"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    plot.subtitle = element_text(size = 12, hjust = 0.5),
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "top",
    legend.title = element_text(face = "bold"),
    panel.grid.minor = element_blank()
  ) +
  scale_y_continuous(limits = c(0, max(plot_data$AAE, na.rm = TRUE) * 1.1), 
                     breaks = pretty_breaks(n = 5)) +
  # Add percentage change labels on top of bars
  geom_text(data = summary_stats %>% filter(!is.na(AAE_mean) & Condition != 1),
            aes(x = ConditionLabel, y = AAE_mean + 0.5, 
                label = paste0(ifelse(Difference >= 0, "+", ""), 
                               round(PercentChange, 1), "%")),
            inherit.aes = FALSE,
            size = 3.5,
            fontface = "bold")

# Display the plot
print(p)
```


GRAVEYARD

One approach to achieve complementary performance is the use of explanations. These explanations might provide information about the AI model (global explanations), about the particular recommendation (local explanations) or some combination of the two. Conceptually, this could help the user build a mental model of the AI and its recommendations, better understanding where it is accurate and where it is more likely to err.

Unfortunately, most experiments find that explanations don't help the user calibrate their use of AI outputs. Explanations tend to increase trust in the AI, leading people to follow the AI recommendation, but don't appear to enable discernment of good and bad AI decisions. Increased trust is a good thing if the person was deviating from the AI too often, but it falls somewhat short of what is required for complementary performance.

In seeking to understand and ameliorate this problem,